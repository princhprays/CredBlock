
from kivy.app import App
from kivy.uix.boxlayout import  BoxLayout
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.popup import Popup
from kivy.uix.image import Image
from kivy.uix.scrollview import ScrollView


from geopy.geocoders import Nominatim
import folium
import webbrowser
import os
import time
import imgkit








class MyApp(BoxLayout):
    def __init__(self, **kwargs):
        super().__init__(orientation='vertical', padding=10, spacing=10, **kwargs)

        self.input = TextInput(hint_text="Enter a location", size_hint_y=None, height=40)
        self.add_widget(self.input)

        self.button = Button(text='Show map', size_hint_y=None, height=30)
        self.button.bind(on_press=self.show_map)
        self.add_widget(self.button)

        self.status_label = Label(text='', size_hint_y=None, height=30)
        self.add_widget(self.status_label)

        self.map_image = Image(size_hint=(1, 1))
        self.add_widget(self.map_image)

    def show_map(self, instance):
        place = self.input.text
        if not place:
            self.show_popup("Please enter a location.")
            return

        geolocator = Nominatim(user_agent="kivy-location-mapper")


        try:
            location = geolocator.geocode(place)
            time.sleep(1)
        except Exception as e:
            self.show_popup("Error: " + str(e))
            return

        if location:
            lat, lon = location.latitude, location.longitude
            self.status_label.text = f"Location: {location.address}, {lat:.4f},{lon:.4f} "

            map_mapper = folium.Map(location=[lat, lon], zoom_start=15, width='100%', height='600')
            folium.Marker([lat, lon], popup=location.address).add_to(map_mapper)
            map_file = "map.html"
            map_png = "map.png"
            map_mapper.save(map_file)

            try:
                imgkit.from_file(map_file, map_png)
                self.map_image.source = map_png
                self.map_image.reload()
            except Exception as e:
                self.show_popup("Error generating image: " + str(e))
                return

        else:
            self.show_popup("Location not found.")


    def show_popup(self, message):
        popup = Popup(title="Notice", content=Label(text=message), size_hint=(0.7, 0.3))



        popup.open()


class MapperApp(App):
    def build(self):
        return MyApp()


if __name__ == '__main__':
    MapperApp().run()



